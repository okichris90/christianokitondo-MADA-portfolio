[
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Load the required libraries\n\nlibrary(\"dplyr\")\nlibrary(\"ggplot2\")\nlibrary(\"stringr\")\nlibrary(\"tidyverse\")\n\n\n\nImporting dataset from github tidytuesday repository\n\ndat <- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-14/age_gaps.csv\")\n\n\n\nGlimpse, structure, and summary of the dataset\n\nglimpse(dat)\n\nRows: 1,155\nColumns: 13\n$ movie_name         <chr> \"Harold and Maude\", \"Venus\", \"The Quiet American\", …\n$ release_year       <int> 1971, 2006, 2002, 1998, 2010, 1992, 2009, 1999, 199…\n$ director           <chr> \"Hal Ashby\", \"Roger Michell\", \"Phillip Noyce\", \"Joe…\n$ age_difference     <int> 52, 50, 49, 45, 43, 42, 40, 39, 38, 38, 36, 36, 35,…\n$ couple_number      <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ actor_1_name       <chr> \"Ruth Gordon\", \"Peter O'Toole\", \"Michael Caine\", \"D…\n$ actor_2_name       <chr> \"Bud Cort\", \"Jodie Whittaker\", \"Do Thi Hai Yen\", \"T…\n$ character_1_gender <chr> \"woman\", \"man\", \"man\", \"man\", \"man\", \"man\", \"man\", …\n$ character_2_gender <chr> \"man\", \"woman\", \"woman\", \"woman\", \"man\", \"woman\", \"…\n$ actor_1_birthdate  <chr> \"1896-10-30\", \"1932-08-02\", \"1933-03-14\", \"1930-09-…\n$ actor_2_birthdate  <chr> \"1948-03-29\", \"1982-06-03\", \"1982-10-01\", \"1975-11-…\n$ actor_1_age        <int> 75, 74, 69, 68, 81, 59, 62, 69, 57, 77, 59, 56, 65,…\n$ actor_2_age        <int> 23, 24, 20, 23, 38, 17, 22, 30, 19, 39, 23, 20, 30,…\n\nstr(dat)\n\n'data.frame':   1155 obs. of  13 variables:\n $ movie_name        : chr  \"Harold and Maude\" \"Venus\" \"The Quiet American\" \"The Big Lebowski\" ...\n $ release_year      : int  1971 2006 2002 1998 2010 1992 2009 1999 1992 1999 ...\n $ director          : chr  \"Hal Ashby\" \"Roger Michell\" \"Phillip Noyce\" \"Joel Coen\" ...\n $ age_difference    : int  52 50 49 45 43 42 40 39 38 38 ...\n $ couple_number     : int  1 1 1 1 1 1 1 1 1 1 ...\n $ actor_1_name      : chr  \"Ruth Gordon\" \"Peter O'Toole\" \"Michael Caine\" \"David Huddleston\" ...\n $ actor_2_name      : chr  \"Bud Cort\" \"Jodie Whittaker\" \"Do Thi Hai Yen\" \"Tara Reid\" ...\n $ character_1_gender: chr  \"woman\" \"man\" \"man\" \"man\" ...\n $ character_2_gender: chr  \"man\" \"woman\" \"woman\" \"woman\" ...\n $ actor_1_birthdate : chr  \"1896-10-30\" \"1932-08-02\" \"1933-03-14\" \"1930-09-17\" ...\n $ actor_2_birthdate : chr  \"1948-03-29\" \"1982-06-03\" \"1982-10-01\" \"1975-11-08\" ...\n $ actor_1_age       : int  75 74 69 68 81 59 62 69 57 77 ...\n $ actor_2_age       : int  23 24 20 23 38 17 22 30 19 39 ...\n\nsummary(dat)\n\n  movie_name         release_year    director         age_difference \n Length:1155        Min.   :1935   Length:1155        Min.   : 0.00  \n Class :character   1st Qu.:1997   Class :character   1st Qu.: 4.00  \n Mode  :character   Median :2004   Mode  :character   Median : 8.00  \n                    Mean   :2001                      Mean   :10.42  \n                    3rd Qu.:2012                      3rd Qu.:15.00  \n                    Max.   :2022                      Max.   :52.00  \n couple_number   actor_1_name       actor_2_name       character_1_gender\n Min.   :1.000   Length:1155        Length:1155        Length:1155       \n 1st Qu.:1.000   Class :character   Class :character   Class :character  \n Median :1.000   Mode  :character   Mode  :character   Mode  :character  \n Mean   :1.398                                                           \n 3rd Qu.:2.000                                                           \n Max.   :7.000                                                           \n character_2_gender actor_1_birthdate  actor_2_birthdate   actor_1_age   \n Length:1155        Length:1155        Length:1155        Min.   :18.00  \n Class :character   Class :character   Class :character   1st Qu.:33.00  \n Mode  :character   Mode  :character   Mode  :character   Median :39.00  \n                                                          Mean   :40.64  \n                                                          3rd Qu.:47.00  \n                                                          Max.   :81.00  \n  actor_2_age   \n Min.   :17.00  \n 1st Qu.:25.00  \n Median :29.00  \n Mean   :30.21  \n 3rd Qu.:34.00  \n Max.   :68.00  \n\n\n\n\nVariables in the dataset\n\nnames(dat)\n\n [1] \"movie_name\"         \"release_year\"       \"director\"          \n [4] \"age_difference\"     \"couple_number\"      \"actor_1_name\"      \n [7] \"actor_2_name\"       \"character_1_gender\" \"character_2_gender\"\n[10] \"actor_1_birthdate\"  \"actor_2_birthdate\"  \"actor_1_age\"       \n[13] \"actor_2_age\"       \n\n\n\ntable(dat$character_1_gender)\n\n\n  man woman \n  941   214 \n\n\n\ntable(dat$character_2_gender)\n\n\n  man woman \n  215   940 \n\n\n\n\nLet’s check the distribution of men and women in these movies\n\nFor Character 1\n\np1 <- ggplot(dat, aes(x = character_1_gender, y = actor_1_age)) +\n  geom_point(size = 0.1) + \n  geom_line() + \n  geom_boxplot() + \n  labs(x = \"Character Gender\", y = \"Character Age\") \n       \np1 + ggtitle(\"Distribution of Age for each gender in Character One\") +\n  theme(plot.title = element_text(hjust = 0.5, color = \"blue\")) \n\n\n\n\nFrom this plot, the average age for men in character 1 is around 40. This average for women is around 35. Thus, men are older compared to women for character 1.\n\n\nFor Character 2\n\np2 <- ggplot(dat, aes(x = character_2_gender, y = actor_2_age)) +\n  geom_point(size = 0.1) + \n  geom_line() + \n  geom_boxplot() + \n  labs(x = \"Character Gender\", y = \"Character Age\") \n       \np2 + ggtitle(\"Distribution of Age for each gender in Character Two\") +\n  theme(plot.title = element_text(hjust = 0.5, color = \"blue\")) \n\n\n\n\nFrom this plot of character 2, the average age for men is around 30, and the average for women is around 28.\n\n\n\nVisualizing whether the age difference increase or decrease over time\n\np3 <- ggplot(dat, aes(x = release_year, y = age_difference)) +\n  geom_point(size = 0.5) + \n  geom_line() + \n  geom_smooth(method = \"loess\", color = \"yellow\", fill = \"yellow\") +\n  geom_smooth(method = lm, color = \"blue\", fill = \"blue\") + \n  scale_x_continuous(breaks=c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2025))  +\n  labs(x = \"Release Year\", y = \"Age Difference\") \n\np3 + ggtitle(\"Age Difference by Release Year\") +\n  theme(plot.title = element_text(hjust = 0.5, color = \"blue\")) \n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nAccording to this graph, it does appear that the age difference gradually decrease over time. However, it does appear that around 2005, there was some increase. The curve slightly went from down to up.\n\nWe would like to see how the impact of couple number on age difference\n\np4 <- ggplot(dat, aes(x = couple_number, y = age_difference, group = couple_number)) + \n  geom_point(size = 0.2) + \n  geom_line() + \n  geom_boxplot(size = 0.2) +\n  labs(x = \"Release Year\", y = \"Age Difference\") \n  \np4 + ggtitle(\"Couple Number and Age Difference\") +\n  theme(plot.title = element_text(hjust = 0.5, color = \"blue\")) \n\n\n\n\nFrom this graph, it seems that there greater age difference there is, the lower number of couple."
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Background\n\n\n\n\n\n\n\n\n\nI am currently a PhD student in Epidemiology & Biostatistics with concentration in Data Analysis & Modelling. My journey includes a bachelor’s degree in Mathematics and a master in Statistics. Prior to joining UGA, I worked as a Biostatistician for Vanderbilt University Medical Center for a little over 3 years.\n\n\nResearch Interests\nI am interested in promoting colorectal cancer screening among early-onset patients (< 50 years of age) and active smokers.\n\n\nGoals for MADA\nI hope to improve my programming skills. Although I have a few years of professional experience working as a Biostatisician, I still make tones of mistakes on a daily basis. There is still a huge opportunity for learning, I would like to learn how to efficiently write R codes and explore different programming tool.\n\n\nFun Fact\nI released my first book over last summer. Title is “The Champion In You”. It is a memoir discussing my journey from growing up in Congo till where I am today with my career/Education. I’m discussing the challenges met and strategies for copind."
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise: On-duty police officer deaths in the US",
    "section": "",
    "text": "The below plot from FiveThirtyEight is what I’m trying to replicate. The data for on-duty police officer deaths comes from the Officer Down Memorial Page, started in 1996 by a college student who is now a police officer and who continues to maintain the database. It extends much further back than the Federal Bureau of Investigation’s data — all the way back to 1791, when two officers were killed, both in New York state. (It hadn’t yet been updated with the Dallas shootings as of Friday afternoon.) National data on the number of police officers isn’t available that far back, but the rate of police officers per the overall population has declined significantly over the years.\n\n\n\n\n\n\n\n\n\n\nDallas shooting cleaning\n\nLoading required libraries\n\n\n\n\n\nData Loading\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location<- here::here(\"Data\",\"all_data_police_deaths.csv\")\nrawdata <- readr::read_csv(data_location)\n\n\n\nCleaning the fields: extracting cause of death, year\n\nclean_data <- rawdata %>%\n  mutate(\n    cause_short = gsub('Cause of Death: ', '', cause),\n    date = mdy(gsub('EOW: ', '', eow)),\n    year = year(date),\n    canine = ifelse(substr(person, 0, 2) == 'K9' & substr(person, 0, 10) != 'K9 Officer', TRUE, FALSE)\n  )\n\n\n\nGlimpse of the data\n\nglimpse(clean_data)\n\nRows: 22,800\nColumns: 8\n$ person      <chr> \"Constable Darius Quimby\", \"Sheriff Cornelius Hogeboom\", \"…\n$ dept        <chr> \"Albany County Constable's Office, NY\", \"Columbia County S…\n$ eow         <chr> \"EOW: Monday, January 3, 1791\", \"EOW: Saturday, October 22…\n$ cause       <chr> \"Cause of Death: Gunfire\", \"Cause of Death: Gunfire\", \"Cau…\n$ cause_short <chr> \"Gunfire\", \"Gunfire\", \"Gunfire\", \"Gunfire\", \"Gunfire\", \"Gu…\n$ date        <date> 1791-01-03, 1791-10-22, 1792-05-17, 1794-01-11, 1797-11-1…\n$ year        <dbl> 1791, 1791, 1792, 1794, 1797, 1804, 1806, 1807, 1808, 1808…\n$ canine      <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FA…\n\n\n\n\nSplit department and state\n\ndept_state <- strsplit(clean_data$dept, \",(?=[^,]+$)\", perl=TRUE)\n\ndept_state_df <- data.frame(matrix(unlist(dept_state), nrow=length(dept_state), byrow=T),stringsAsFactors=FALSE) %>% \n  rename(dept_name=X1, state=X2)\n\nclean_data <- clean_data %>% \n  bind_cols(dept_state_df)\n\n\n\nGlimpse of this dataframe\n\nglimpse(dept_state_df)\n\nRows: 22,800\nColumns: 2\n$ dept_name <chr> \"Albany County Constable's Office\", \"Columbia County Sheriff…\n$ state     <chr> \" NY\", \" NY\", \" NY\", \" US\", \" SC\", \" NC\", \" NY\", \" KY\", \" ME…\n\n\n\n\nRemove canines\n\npersons_data <- clean_data %>% \n  filter(canine == FALSE) \n\n\n\nFilter for major categories where count of cause of death is at least 20\n\nlarge_categories <- persons_data %>%\n      group_by(year, cause_short) %>%\n      summarize(count = n()) %>%\n      data.frame() %>%\n      filter(count >= 20) %>%\n      select(cause_short) %>%\n      unique()\n\n\n\nGlimpse of data\n\nglimpse(large_categories)\n\nRows: 8\nColumns: 1\n$ cause_short <chr> \"Gunfire\", \"Motorcycle accident\", \"Automobile accident\", \"…\n\n\n\n\nCategories of cause of death to plot\n\ncat_to_plot <- c(large_categories$cause_short, \"Gunfire (Accidental)\")\n\n?arrange\n\n\nArranging count of cause of death in descending order\n\nplot_order <- persons_data %>%\n    mutate(cat = ifelse(cause_short %in% cat_to_plot, cause_short, 'other')) %>%\n    group_by(cat) %>%\n    summarize(count = n()) %>%\n    data.frame() %>%\n    arrange(desc(count)) %>%\n    extract2(1)\n\n\n\nMove cause of death ‘other’ to the end\n\nplot_order <- c(plot_order[! (plot_order == 'other')], 'other')\n\n\n\nGlimpse of data\n\nglimpse(plot_order)\n\n chr [1:10] \"Gunfire\" \"Automobile accident\" \"Motorcycle accident\" ...\n\n\n\n\nCreate data for visualization\n\ndata_for_plot <- persons_data %>%\n      mutate(category = ifelse(cause_short %in% cat_to_plot, cause_short, 'other')) %>%\n      group_by(year, category) %>%\n      summarize(count = n()) %>%\n      data.frame() %>%\n      spread(category, count)\n\n\n\nSet missing to zero\n\ndata_for_plot[is.na(data_for_plot)] <- 0\n\n\n\nGlimpse of data\n\nglimpse(data_for_plot)\n\nRows: 202\nColumns: 11\n$ year                   <dbl> 1791, 1792, 1794, 1797, 1804, 1806, 1807, 1808,…\n$ `Aircraft accident`    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `Automobile accident`  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Gunfire                <dbl> 2, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1,…\n$ `Gunfire (Accidental)` <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `Heart attack`         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `Motorcycle accident`  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ other                  <dbl> 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 1, 2, 1, 1,…\n$ `Struck by vehicle`    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `Terrorist attack`     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `Vehicular assault`    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n\n\n\n\nSelecting variables yer, category of death, and count. Also arranging the category\n\ndata_for_plot <- data_for_plot %>%\n      gather(category, count, -year) %>%\n      mutate(category = factor(category, levels=plot_order)) %>%\n      arrange(category)\n\n\n\nPlot of Deaths by cause\n\np_area <- ggplot(data_for_plot, aes(x=year, y=count, group=category, order=category)) +\n      geom_area(aes(fill=category), position='stack')\n\np_area + ggtitle(\"On-duty police officer deaths in the US\", \"By cause since 1791\") +\n  theme(legend.position = c(0.2,0.6))\n\n\n\n\nReproducing this graph was an amazing experience. It was pretty fun to go through every possible detail of the original plot and try to perfectly reproduce it. Going through that process of “trying to be perfect” actually helps me learned other cool stuff that ggplot has to offer. One is how to manipulate the legend position in the graph."
  },
  {
    "objectID": "coding_exercise.html",
    "href": "coding_exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "library(\"dslabs\")\nlibrary(\"dplyr\") \n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(\"ggplot2\")\n\n###look at help file for gapminder data\n\nhelp(gapminder)\n\n###get an overview of data structure\n\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n\n###get a summary of data\n\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586"
  },
  {
    "objectID": "coding_exercise.html#assessing-the-impact-of-region-in-the-relationship-between-life-expectancy-and-mortality-in-year-2000",
    "href": "coding_exercise.html#assessing-the-impact-of-region-in-the-relationship-between-life-expectancy-and-mortality-in-year-2000",
    "title": "R Coding Exercise",
    "section": "Assessing the Impact of region in the relationship between life expectancy and mortality in year 2000",
    "text": "Assessing the Impact of region in the relationship between life expectancy and mortality in year 2000\nFirst, we will recreate the visualization of the Africa data in 2000 but adding in color to differentiate the differences in region.\n\n#load packages\n\nlibrary(dslabs) \nlibrary(\"dplyr\") \nlibrary(\"ggplot2\") \n\nafricadata <- gapminder %>% filter(continent == \"Africa\")\n#reset africa dataset for year 2000 only\nafricadata_2000 = subset(africadata, year==2000)\n\n#More Plotting #Infant Mortality and Life Expectancy in 2000;\nggplot(africadata_2000, aes(x=infant_mortality, y=life_expectancy, color=region)) +geom_point()\n\n\n\n\nNext we will run a simple linear regression model to assess the mean life expectancy in each of the regions\n\n#Box Plots of Life Expectancy by Region for the years 2000;\n\nbox=ggplot(africadata_2000, aes(x=region, y=life_expectancy, color=region)) + geom_boxplot()\n\nbox + geom_jitter(shape=16, position=position_jitter(0.2))\n\n\n\n#Simple linear regression model for year 2000; \n\nfit3 = lm (life_expectancy~factor(region), data=africadata_2000)\n\nsummary(fit3)\n\n\nCall:\nlm(formula = life_expectancy ~ factor(region), data = africadata_2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-16.056  -4.138  -0.500   3.013  17.744 \n\nCoefficients:\n                              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                    53.6563     1.6203  33.115  < 2e-16 ***\nfactor(region)Middle Africa    -0.8562     2.8065  -0.305    0.762    \nfactor(region)Northern Africa  17.4604     3.1026   5.628 1.04e-06 ***\nfactor(region)Southern Africa  -2.1563     3.3206  -0.649    0.519    \nfactor(region)Western Africa    3.1812     2.2915   1.388    0.172    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.481 on 46 degrees of freedom\nMultiple R-squared:  0.4601,    Adjusted R-squared:  0.4131 \nF-statistic:   9.8 on 4 and 46 DF,  p-value: 8.074e-06\n\n\nThis shows us that there are significant variability in the mean life expectancy by region in the year 2000.\nNext, we will assess region and infant mortality in the same model.\n\n#MLR\nadjfit =lm(life_expectancy~infant_mortality+factor(region), data=africadata_2000)\n\nsummary(adjfit)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality + factor(region), \n    data = africadata_2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-19.1675  -2.4682   0.6053   2.2362   7.8495 \n\nCoefficients:\n                              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                   66.95785    2.36426  28.321  < 2e-16 ***\ninfant_mortality              -0.17479    0.02694  -6.488 5.87e-08 ***\nfactor(region)Middle Africa    2.96949    2.12310   1.399  0.16877    \nfactor(region)Northern Africa 10.89992    2.47117   4.411 6.35e-05 ***\nfactor(region)Southern Africa -4.13489    2.43244  -1.700  0.09605 .  \nfactor(region)Western Africa   5.92329    1.71809   3.448  0.00124 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.71 on 45 degrees of freedom\nMultiple R-squared:  0.721, Adjusted R-squared:  0.6901 \nF-statistic: 23.26 on 5 and 45 DF,  p-value: 1.828e-11\n\n\nFrom this model we can interpret that when adjusting for region in Africa, infant mortality is still linearly associated with life expectancy (p<0.001). The parameter estimate tells us that for each one-unit increase in infant mortality life expectancy declines by 0.18 years."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello\n\nAnd hello again\nWelcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!"
  },
  {
    "objectID": "dataanalysis_exercise.html",
    "href": "dataanalysis_exercise.html",
    "title": "R Data Wrangling Exercise - Chris Okitondo",
    "section": "",
    "text": "This dataset shows health conditions and contributing causes mentioned in conjunction with deaths involving coronavirus disease 2019 (COVID-19) by age group and jurisdiction of occurrence from 2020-2023. It was downloaded from the CDC website.\n\nSetup\nLoad needed packages. make sure they are installed.\n\n\n\n\n\nData loading\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location<- here::here(\"data\",\"Conditions_Contributing_to_COVID-19_Deaths_2020_2023.xlsx\")\nrawdata <- readxl::read_excel(data_location)\n\n\n\nLooking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 521,640\nColumns: 14\n$ `Data As Of`         <chr> \"2023-01-29\", \"2023-01-29\", \"2023-01-29\", \"2023-0…\n$ `Start Date`         <chr> \"2020-01-01\", \"2020-01-01\", \"2020-01-01\", \"2020-0…\n$ `End Date`           <chr> \"2023-01-28\", \"2023-01-28\", \"2023-01-28\", \"2023-0…\n$ Group                <chr> \"By Total\", \"By Total\", \"By Total\", \"By Total\", \"…\n$ Year                 <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Month                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ State                <chr> \"United States\", \"United States\", \"United States\"…\n$ `Condition Group`    <chr> \"Respiratory diseases\", \"Respiratory diseases\", \"…\n$ Condition            <chr> \"Influenza and pneumonia\", \"Influenza and pneumon…\n$ ICD10_codes          <chr> \"J09-J18\", \"J09-J18\", \"J09-J18\", \"J09-J18\", \"J09-…\n$ `Age Group`          <chr> \"0-24\", \"25-34\", \"35-44\", \"45-54\", \"55-64\", \"65-7…\n$ `COVID-19 Deaths`    <dbl> 1492, 5700, 14878, 36982, 81436, 126144, 133948, …\n$ `Number of Mentions` <dbl> 1562, 5916, 15491, 38430, 84400, 130069, 137110, …\n$ Flag                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n\nsummary(rawdata)\n\n  Data As Of         Start Date          End Date            Group          \n Length:521640      Length:521640      Length:521640      Length:521640     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   Year          Month            State           Condition Group   \n Mode:logical   Mode:logical   Length:521640      Length:521640     \n TRUE:509220    TRUE:459540    Class :character   Class :character  \n NA's:12420     NA's:62100     Mode  :character   Mode  :character  \n                                                                    \n                                                                    \n                                                                    \n                                                                    \n  Condition         ICD10_codes         Age Group         COVID-19 Deaths    \n Length:521640      Length:521640      Length:521640      Min.   :      0.0  \n Class :character   Class :character   Class :character   1st Qu.:      0.0  \n Mode  :character   Mode  :character   Mode  :character   Median :      0.0  \n                                                          Mean   :    136.7  \n                                                          3rd Qu.:     21.0  \n                                                          Max.   :1100296.0  \n                                                          NA's   :153354     \n Number of Mentions      Flag          \n Min.   :      0.0   Length:521640     \n 1st Qu.:      0.0   Class :character  \n Median :      0.0   Mode  :character  \n Mean   :    146.8                     \n 3rd Qu.:     23.0                     \n Max.   :1100296.0                     \n NA's   :148443                        \n\nhead(rawdata)\n\n# A tibble: 6 × 14\n  `Data As Of` Start D…¹ End D…² Group Year  Month State Condi…³ Condi…⁴ ICD10…⁵\n  <chr>        <chr>     <chr>   <chr> <lgl> <lgl> <chr> <chr>   <chr>   <chr>  \n1 2023-01-29   2020-01-… 2023-0… By T… NA    NA    Unit… Respir… Influe… J09-J18\n2 2023-01-29   2020-01-… 2023-0… By T… NA    NA    Unit… Respir… Influe… J09-J18\n3 2023-01-29   2020-01-… 2023-0… By T… NA    NA    Unit… Respir… Influe… J09-J18\n4 2023-01-29   2020-01-… 2023-0… By T… NA    NA    Unit… Respir… Influe… J09-J18\n5 2023-01-29   2020-01-… 2023-0… By T… NA    NA    Unit… Respir… Influe… J09-J18\n6 2023-01-29   2020-01-… 2023-0… By T… NA    NA    Unit… Respir… Influe… J09-J18\n# … with 4 more variables: `Age Group` <chr>, `COVID-19 Deaths` <dbl>,\n#   `Number of Mentions` <dbl>, Flag <chr>, and abbreviated variable names\n#   ¹​`Start Date`, ²​`End Date`, ³​`Condition Group`, ⁴​Condition, ⁵​ICD10_codes\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n521640\n\n\nNumber of columns\n14\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n10\n\n\nlogical\n2\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nData As Of\n0\n1.00\n10\n10\n0\n1\n0\n\n\nStart Date\n0\n1.00\n10\n10\n0\n37\n0\n\n\nEnd Date\n0\n1.00\n10\n10\n0\n37\n0\n\n\nGroup\n0\n1.00\n7\n8\n0\n3\n0\n\n\nState\n0\n1.00\n4\n20\n0\n54\n0\n\n\nCondition Group\n0\n1.00\n6\n73\n0\n12\n0\n\n\nCondition\n0\n1.00\n6\n73\n0\n23\n0\n\n\nICD10_codes\n0\n1.00\n3\n180\n0\n23\n0\n\n\nAge Group\n0\n1.00\n3\n10\n0\n10\n0\n\n\nFlag\n368286\n0.29\n122\n122\n0\n1\n0\n\n\n\nVariable type: logical\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\ncount\n\n\n\n\nYear\n12420\n0.98\n1\nTRU: 509220\n\n\nMonth\n62100\n0.88\n1\nTRU: 459540\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nCOVID-19 Deaths\n153354\n0.71\n136.69\n3149.07\n0\n0\n0\n21\n1100296\n▇▁▁▁▁\n\n\nNumber of Mentions\n148443\n0.72\n146.79\n3376.53\n0\n0\n0\n23\n1100296\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\n\n\nTelling R to avoid using scientific notation\n\noptions(scipen=999)\n\n\n\nList variable names\n\nnames(rawdata)\n\n [1] \"Data As Of\"         \"Start Date\"         \"End Date\"          \n [4] \"Group\"              \"Year\"               \"Month\"             \n [7] \"State\"              \"Condition Group\"    \"Condition\"         \n[10] \"ICD10_codes\"        \"Age Group\"          \"COVID-19 Deaths\"   \n[13] \"Number of Mentions\" \"Flag\"              \n\n\n\n\nLet’s rename some variable names\n\nrawdata <- rawdata %>% rename(current_data = `Data As Of`, start_date = `Start Date`, end_date = `End Date`, condition_group = `Condition Group`, condition = Condition, age_group = `Age Group`, covid_deaths = `COVID-19 Deaths`)\n\n\n\nDistribution of age group\n\ntable(rawdata$age_group)\n\n\n      0-24      25-34      35-44      45-54      55-64      65-74      75-84 \n     52164      52164      52164      52164      52164      52164      52164 \n       85+   All Ages Not stated \n     52164      52164      52164 \n\n\n\n\nExcluding data where age group is not stated\n\nrawdata <- rawdata %>% filter(age_group != 'Not stated')\n\nObservation went from 521640 to 469476\n\n\nLet’s visualize at COVID deaths by age group\n\nggplot(data = rawdata, aes(x = age_group, y = covid_deaths)) + geom_bar(stat='identity', fill = \"steelblue\")\n\nWarning: Removed 153109 rows containing missing values (`position_stack()`).\n\n\n\n\n\n\n\nSaving the cleaned data\n\nsave_data_location <- here::here(\"data\", \"processeddata.rds\")\nsaveRDS(rawdata, file = save_data_location)\n\n##This Section Added by Annabella Hines\n\ncleandata <- readRDS(file=save_data_location)\n\n##Plots\nFirst I wanted to look at the number of Covid deaths by each condition group.\n\ncleandata2 <- cleandata %>% filter(Group==\"By Total\")\nggplot(cleandata2, aes(x=condition_group, y=covid_deaths))+geom_col()+xlab(\"Condition Group\")+ylab(\"Covid Deaths\")+ theme(axis.text.x = element_text(angle=13, size=5))\n\nWarning: Removed 1659 rows containing missing values (`position_stack()`).\n\n\n\n\n\nIt appears that respiratory diseases had the highest number of associated Covid deaths. I now want to look at the respiratory disease by specific condition.\n\nrespiratory <- cleandata2 %>% filter(condition_group==\"Respiratory diseases\")\nggplot(respiratory, aes(x=condition, y=covid_deaths))+geom_col()+xlab(\"Respiratory Condition\")+ylab(\"Covid Deaths\")+theme(axis.text.x = element_text(angle=13))\n\nWarning: Removed 436 rows containing missing values (`position_stack()`).\n\n\n\n\n\nThe respiratory condition with the highest number of Covid deaths appears to be the influenza and pneumonia. The last thing I want to do is look as the distribution of respiratory diseases by age group.\n\nggplot(respiratory, aes(x=age_group, y=covid_deaths, fill=condition))+geom_col()+theme(legend.key.size = unit(0.25, 'cm'), axis.text.x = element_text(angle=90))+ylab(\"Covid Deaths\")+ xlab(\"Age Group\")\n\nWarning: Removed 436 rows containing missing values (`position_stack()`)."
  },
  {
    "objectID": "fluanalysis/code/machinelearning.html",
    "href": "fluanalysis/code/machinelearning.html",
    "title": "Machine Learning",
    "section": "",
    "text": "library(here)\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(ggplot2)\nlibrary(ranger)\nlibrary(rpart)\nlibrary(glmnet)\nlibrary(vip)\nlibrary(rpart.plot)\nlibrary(performance)\nlibrary(yardstick)\nlibrary(recipes)\n\n\n\n\ncleaned_data_mod11 <- readRDS(here(\"fluanalysis\",\"Data\",\"cleaned_data_mod11.Rds\"))\n\n\n\n\n\nset.seed(123)\n\n\n\n\n\n\n\n\n# Put 70/30 of the data into the training set \ndata_split <- initial_split(cleaned_data_mod11, prop = 7/10)\n# Create data frames for the two sets:\ntrain_data <- training(data_split)\ntest_data  <- testing(data_split)\n# Datasets for the training and test:\ntrain_data <- training(data_split)\ntest_data  <- testing(data_split)\n#5-fold cross-validation, 5 times repeated\nfold_ds<- vfold_cv(train_data, v = 5, repeats = 5, strata = BodyTemp)\n#Recipe for the data and fitting \ndata_recipe <- recipe(BodyTemp ~ ., data = train_data) %>%\n  step_dummy(all_nominal(), -all_outcomes()) \nnull_recipe <- recipe(BodyTemp ~ 1, data = train_data) %>%\n  step_dummy(all_nominal(), -all_outcomes()) \n#linear model\nln_model <- linear_reg() %>% set_engine(\"lm\") %>% set_mode(\"regression\")\n#Workflow\nnull_flow <- workflow() %>% add_model(ln_model) %>% add_recipe(null_recipe)\n#look at model\nnull_fit <- null_flow %>% fit(data=train_data) %>% fit_resamples(resamples=fold_ds)\n\n! Fold1, Repeat1: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold2, Repeat1: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold3, Repeat1: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold4, Repeat1: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold5, Repeat1: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold1, Repeat2: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold2, Repeat2: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold3, Repeat2: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold4, Repeat2: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold5, Repeat2: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold1, Repeat3: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold2, Repeat3: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold3, Repeat3: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold4, Repeat3: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold5, Repeat3: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold1, Repeat4: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold2, Repeat4: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold3, Repeat4: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold4, Repeat4: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold5, Repeat4: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold1, Repeat5: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold2, Repeat5: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold3, Repeat5: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold4, Repeat5: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold5, Repeat5: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\nnull_metrics<- collect_metrics(null_fit)\nnull_metrics\n\n# A tibble: 2 × 6\n  .metric .estimator   mean     n std_err .config             \n  <chr>   <chr>       <dbl> <int>   <dbl> <chr>               \n1 rmse    standard     1.22    25  0.0178 Preprocessor1_Model1\n2 rsq     standard   NaN        0 NA      Preprocessor1_Model1\n\n\nWe got RMSE of 1.21 from the null model\n\n\n\n\ntune_spec <- \n  decision_tree(\n    cost_complexity = tune(),\n    tree_depth = tune()\n  ) %>% \n  set_engine(\"rpart\") %>% \n  set_mode(\"regression\")\n#Grid\ntree_grid <- grid_regular(cost_complexity(),\n                          tree_depth(),\n                          levels = 5)\n#create workflow\ntree_wf <- workflow() %>%\n  add_model(tune_spec) %>%\n  add_formula(BodyTemp ~ .)\n#Tuning grid cross validation\ntree_res <- \n  tree_wf %>% \n  tune_grid(\n    resamples = fold_ds,\n    grid = tree_grid\n    )\n\n! Fold1, Repeat1: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold2, Repeat1: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold3, Repeat1: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold4, Repeat1: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold5, Repeat1: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold1, Repeat2: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold2, Repeat2: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold3, Repeat2: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold4, Repeat2: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold5, Repeat2: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold1, Repeat3: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold2, Repeat3: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold3, Repeat3: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold4, Repeat3: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold5, Repeat3: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold1, Repeat4: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold2, Repeat4: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold3, Repeat4: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold4, Repeat4: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold5, Repeat4: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold1, Repeat5: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold2, Repeat5: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold3, Repeat5: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold4, Repeat5: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\n\n! Fold5, Repeat5: internal:\n  There was 1 warning in `dplyr::summarise()`.\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 1`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 4`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 8`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 11`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n  ℹ In argument: `.estimate = metric_fn(truth = BodyTemp, estimate = .pr...\n    = na_rm)`.\n  ℹ In group 1: `cost_complexity = 0.1`, `tree_depth = 15`.\n  Caused by warning:\n  ! A correlation computation is required, but `estimate` is constant an...\n\ntree_res %>% \n  collect_metrics()\n\n# A tibble: 50 × 8\n   cost_complexity tree_depth .metric .estimator     mean     n  std_err .config\n             <dbl>      <int> <chr>   <chr>         <dbl> <int>    <dbl> <chr>  \n 1    0.0000000001          1 rmse    standard     1.20      25  0.0173  Prepro…\n 2    0.0000000001          1 rsq     standard     0.0485    25  0.00488 Prepro…\n 3    0.0000000178          1 rmse    standard     1.20      25  0.0173  Prepro…\n 4    0.0000000178          1 rsq     standard     0.0485    25  0.00488 Prepro…\n 5    0.00000316            1 rmse    standard     1.20      25  0.0173  Prepro…\n 6    0.00000316            1 rsq     standard     0.0485    25  0.00488 Prepro…\n 7    0.000562              1 rmse    standard     1.20      25  0.0173  Prepro…\n 8    0.000562              1 rsq     standard     0.0485    25  0.00488 Prepro…\n 9    0.1                   1 rmse    standard     1.22      25  0.0178  Prepro…\n10    0.1                   1 rsq     standard   NaN          0 NA       Prepro…\n# … with 40 more rows\n\n#Look at the best model \ntree_res %>%\n  show_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 5 × 8\n  cost_complexity tree_depth .metric .estimator  mean     n std_err .config     \n            <dbl>      <int> <chr>   <chr>      <dbl> <int>   <dbl> <chr>       \n1    0.0000000001          1 rmse    standard    1.20    25  0.0173 Preprocesso…\n2    0.0000000178          1 rmse    standard    1.20    25  0.0173 Preprocesso…\n3    0.00000316            1 rmse    standard    1.20    25  0.0173 Preprocesso…\n4    0.000562              1 rmse    standard    1.20    25  0.0173 Preprocesso…\n5    0.1                   1 rmse    standard    1.22    25  0.0178 Preprocesso…\n\n#rmse = 1.199\n#Select best tree\nbest_tree <- tree_res %>%\n  select_best(n=1)\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n#Final model from best tree\nfinal_wf <- \n  tree_wf %>% \n  finalize_workflow(best_tree)\n#Fit \nfinal_fit <- \n  final_wf %>%\n  fit(train_data) \nfinal_fit\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Formula\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\nBodyTemp ~ .\n\n── Model ───────────────────────────────────────────────────────────────────────\nn= 510 \n\nnode), split, n, deviance, yval\n      * denotes terminal node\n\n1) root 510 767.6997 98.98529  \n  2) SubjectiveFever=No 154 101.9304 98.55974 *\n  3) SubjectiveFever=Yes 356 625.8163 99.16938 *\n\n#Plot final fit\nrpart.plot(extract_fit_parsnip(final_fit)$fit)\n\nWarning: Cannot retrieve the data used to build the model (so cannot determine roundint and is.binary for the variables).\nTo silence this warning:\n    Call rpart.plot with roundint=FALSE,\n    or rebuild the rpart model with model=TRUE.\n\n\n\n\n\nWe got a RMSE of 1.20 for the tree model\n\n\n\n\nlasso_mod <- \n  linear_reg(penalty = tune(), mixture = 1) %>% \n  set_engine(\"glmnet\")\n\n# Creating workflow using data recipe from above\nlasso_workflow <- \n  workflow() %>% \n  add_model(lasso_mod) %>% \n  add_recipe(data_recipe)\n# tuning grid\nlasso_grid <- tibble(penalty = 10^seq(-4, -1, length.out = 30))\n#Bottom 5 penalty values\nlasso_grid %>% top_n(-5)\n\nSelecting by penalty\n\n\n# A tibble: 5 × 1\n   penalty\n     <dbl>\n1 0.0001  \n2 0.000127\n3 0.000161\n4 0.000204\n5 0.000259\n\n#Top 5 penalty values\nlasso_grid %>% top_n(5)\n\nSelecting by penalty\n\n\n# A tibble: 5 × 1\n  penalty\n    <dbl>\n1  0.0386\n2  0.0489\n3  0.0621\n4  0.0788\n5  0.1   \n\n#Using tuning grids\nlr_res <- \n  lasso_workflow %>% \n  tune_grid(resamples = fold_ds,\n            grid = lasso_grid,\n            control = control_grid(verbose = FALSE, save_pred = TRUE),\n            metrics = NULL)\nlr_res %>% collect_metrics()\n\n# A tibble: 60 × 7\n    penalty .metric .estimator   mean     n std_err .config              \n      <dbl> <chr>   <chr>       <dbl> <int>   <dbl> <chr>                \n 1 0.0001   rmse    standard   1.21      25 0.0193  Preprocessor1_Model01\n 2 0.0001   rsq     standard   0.0567    25 0.00650 Preprocessor1_Model01\n 3 0.000127 rmse    standard   1.21      25 0.0193  Preprocessor1_Model02\n 4 0.000127 rsq     standard   0.0567    25 0.00650 Preprocessor1_Model02\n 5 0.000161 rmse    standard   1.21      25 0.0193  Preprocessor1_Model03\n 6 0.000161 rsq     standard   0.0567    25 0.00650 Preprocessor1_Model03\n 7 0.000204 rmse    standard   1.21      25 0.0193  Preprocessor1_Model04\n 8 0.000204 rsq     standard   0.0567    25 0.00650 Preprocessor1_Model04\n 9 0.000259 rmse    standard   1.21      25 0.0193  Preprocessor1_Model05\n10 0.000259 rsq     standard   0.0567    25 0.00650 Preprocessor1_Model05\n# … with 50 more rows\n\nlr_res %>% show_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 5 × 7\n  penalty .metric .estimator  mean     n std_err .config              \n    <dbl> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                \n1  0.0621 rmse    standard    1.18    25  0.0179 Preprocessor1_Model28\n2  0.0788 rmse    standard    1.18    25  0.0176 Preprocessor1_Model29\n3  0.0489 rmse    standard    1.18    25  0.0182 Preprocessor1_Model27\n4  0.0386 rmse    standard    1.18    25  0.0183 Preprocessor1_Model26\n5  0.1    rmse    standard    1.19    25  0.0175 Preprocessor1_Model30\n\n# Selecting best performing model\nbest_lasso <- lr_res %>% select_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n#Final Model\nlasso_final_wf <- \n  lasso_workflow %>% finalize_workflow(best_lasso)\nlasso_final_fit <- lasso_final_wf %>% fit(train_data) \n#plot\nx <- extract_fit_engine(lasso_final_fit)\nplot(x, \"lambda\")\n\n\n\n\n\n\n\n\ncores <- parallel::detectCores()\ncores\n\n[1] 8\n\nrandomforest_mod <-  rand_forest(mtry = tune(), min_n = tune(), trees = 1000) %>% \n  set_engine(\"ranger\", importance = \"impurity\", num.threads = cores) %>% set_mode(\"regression\")\n#Workflow\nrandomforest_wf <-  workflow() %>% add_model(randomforest_mod) %>% add_recipe(data_recipe)\n#Tune\nextract_parameter_set_dials(randomforest_mod)\n\nCollection of 2 parameters for tuning\n\n identifier  type    object\n       mtry  mtry nparam[?]\n      min_n min_n nparam[+]\n\nModel parameters needing finalization:\n   # Randomly Selected Predictors ('mtry')\n\nSee `?dials::finalize` or `?dials::update.parameters` for more information.\n\n#Tune grid\nrandomforest_res <- randomforest_wf %>%  tune_grid(fold_ds, grid = 25, control = control_grid(save_pred = TRUE), metrics = NULL)\n\ni Creating pre-processing data to finalize unknown parameter: mtry\n\n#Best forest\nrandomforest_res %>% show_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 5 × 8\n   mtry min_n .metric .estimator  mean     n std_err .config              \n  <int> <int> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                \n1     9    33 rmse    standard    1.19    25  0.0176 Preprocessor1_Model24\n2     3    25 rmse    standard    1.19    25  0.0177 Preprocessor1_Model02\n3     4    19 rmse    standard    1.19    25  0.0177 Preprocessor1_Model25\n4    13    27 rmse    standard    1.20    25  0.0176 Preprocessor1_Model20\n5    20    39 rmse    standard    1.20    25  0.0175 Preprocessor1_Model01\n\nrandomforest_best <- randomforest_res %>% select_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n# workflow\nrandomforest_fwf<- randomforest_wf %>% finalize_workflow(randomforest_best)\n#Final fit\nranforest_fin <- randomforest_fwf %>% fit(train_data)\nranforest_fin %>% extract_fit_parsnip() %>% vip(num_features = 28)\n\n\n\nfun <- extract_fit_engine(ranforest_fin)\nvip(fun)\n\n\n\n\nWe got RMSE of 1.19\n\n\n\nLASSO has the highest RMSE.\nWe will run the LASSO model on the split data\n\nlasso_test_data <- \n  lasso_final_wf %>%\n  last_fit(data_split) \nlasso_test_data %>%\n   collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  <chr>   <chr>          <dbl> <chr>               \n1 rmse    standard      1.10   Preprocessor1_Model1\n2 rsq     standard      0.0428 Preprocessor1_Model1\n\n\nWe got RMSE of 1.10"
  },
  {
    "objectID": "fluanalysis/code/exploration.html",
    "href": "fluanalysis/code/exploration.html",
    "title": "Data Exploratory Analysis",
    "section": "",
    "text": "#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\nlibrary(dplyr)\nlibrary(skimr)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(reshape2)"
  },
  {
    "objectID": "fluanalysis/code/exploration.html#continuous-outcome-variable-body-temperature",
    "href": "fluanalysis/code/exploration.html#continuous-outcome-variable-body-temperature",
    "title": "Data Exploratory Analysis",
    "section": "Continuous outcome variable: Body Temperature",
    "text": "Continuous outcome variable: Body Temperature\n\nLooking at the distribution of body temperature, our continuous outcome variable\n\nggplot(mydata, aes(x = BodyTemp)) +\n  geom_histogram() + ggtitle(\"Distribution of Body Temperature\") + theme_classic()\n\n\n\n\n\n\nCreating boxplot of Cough intensity and Body temperature variables\n\n# Creating boxplot of Cough intensity and Body temperature variables\nggplot(mydata, aes(x = factor(CoughIntensity), y = BodyTemp)) +\n  geom_boxplot() +\n  labs(x = \"Cough Intensity\", y = \"Body Temperature\") + ggtitle(\"Patterns between cough intensity abd body temperature\") + theme_classic()\n\n\n\n\n\n\nCreating boxplot of Chest Congestion and Body temperature variables\n\nggplot(mydata, aes(x = factor(ChestCongestion), y = BodyTemp)) +\n  geom_boxplot() +\n  labs(x = \"Chest Congestion\", y = \"Body Temperature\") + ggtitle(\"Patterns between ChestCongestion and body temperature\") + theme_classic()\n\n\n\n\n\n\nCreating boxplot of Headache and Body temperature variables\n\n# Creating boxplot of Cough intensity and Body temperature variables\nggplot(mydata, aes(x = factor(Headache), y = BodyTemp)) +\n  geom_boxplot() +\n  labs(x = \"Headache\", y = \"Body Temperature\") + ggtitle(\"Patterns between Headache and body temperature\") + theme_classic()"
  },
  {
    "objectID": "fluanalysis/code/exploration.html#categorical-outcome-variable",
    "href": "fluanalysis/code/exploration.html#categorical-outcome-variable",
    "title": "Data Exploratory Analysis",
    "section": "Categorical outcome variable",
    "text": "Categorical outcome variable\n\nThe distribution of Nausea\n\nggplot(mydata, aes(x = Nausea)) +\n  geom_bar() + ggtitle(\"Distribution of Nausea\") + theme_classic()\n\n\n\n\n\n\nDistribution of Nausea and Nasal Congestion\n\nggplot(mydata, aes(x = Nausea, fill = NasalCongestion)) +\n  geom_histogram(stat=\"count\") + \n  ggtitle(\"Distribution of Nausea and Nasal Congestion\") + theme_classic()\n\n\n\n\n\n\nDistribution of Nausea and Nasal Congestion\n\nggplot(mydata, aes(x = Nausea, fill = Fatigue)) +\n  geom_histogram(stat=\"count\") + \n  ggtitle(\"Distribution of Nausea and Fatigue\") + theme_classic()"
  },
  {
    "objectID": "fluanalysis/code/wrangling.html",
    "href": "fluanalysis/code/wrangling.html",
    "title": "Module 8: Data Wrangling - Chris Okitondo",
    "section": "",
    "text": "Setup\nLoad needed packages.\n\n\n\n\n\nData loading\n\n# path to data\ndata_location<- here::here(\"fluanalysis\", \"data\", \"SympAct_Any_Pos.Rda\")\n# load data\ndata <- readRDS(data_location)\n\n\n\nLooking at the data\n\ndplyr::glimpse(data)\n\nRows: 735\nColumns: 63\n$ DxName1           <fct> \"Influenza like illness - Clinical Dx\", \"Acute tonsi…\n$ DxName2           <fct> NA, \"Influenza like illness - Clinical Dx\", \"Acute p…\n$ DxName3           <fct> NA, NA, NA, NA, NA, NA, NA, NA, \"Fever, unspecified\"…\n$ DxName4           <fct> NA, NA, NA, NA, NA, NA, NA, NA, \"Other fatigue\", NA,…\n$ DxName5           <fct> NA, NA, NA, NA, NA, NA, NA, NA, \"Headache\", NA, NA, …\n$ Unique.Visit      <chr> \"340_17632125\", \"340_17794836\", \"342_17737773\", \"342…\n$ ActivityLevel     <int> 10, 6, 2, 2, 5, 3, 4, 0, 0, 5, 9, 1, 3, 6, 5, 2, 2, …\n$ ActivityLevelF    <fct> 10, 6, 2, 2, 5, 3, 4, 0, 0, 5, 9, 1, 3, 6, 5, 2, 2, …\n$ SwollenLymphNodes <fct> Yes, Yes, Yes, Yes, Yes, No, No, No, Yes, No, Yes, Y…\n$ ChestCongestion   <fct> No, Yes, Yes, Yes, No, No, No, Yes, Yes, Yes, Yes, Y…\n$ ChillsSweats      <fct> No, No, Yes, Yes, Yes, Yes, Yes, Yes, Yes, No, Yes, …\n$ NasalCongestion   <fct> No, Yes, Yes, Yes, No, No, No, Yes, Yes, Yes, Yes, Y…\n$ CoughYN           <fct> Yes, Yes, No, Yes, No, Yes, Yes, Yes, Yes, Yes, No, …\n$ Sneeze            <fct> No, No, Yes, Yes, No, Yes, No, Yes, No, No, No, No, …\n$ Fatigue           <fct> Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Ye…\n$ SubjectiveFever   <fct> Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, No, Yes…\n$ Headache          <fct> Yes, Yes, Yes, Yes, Yes, Yes, No, Yes, Yes, Yes, Yes…\n$ Weakness          <fct> Mild, Severe, Severe, Severe, Moderate, Moderate, Mi…\n$ WeaknessYN        <fct> Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Ye…\n$ CoughIntensity    <fct> Severe, Severe, Mild, Moderate, None, Moderate, Seve…\n$ CoughYN2          <fct> Yes, Yes, Yes, Yes, No, Yes, Yes, Yes, Yes, Yes, Yes…\n$ Myalgia           <fct> Mild, Severe, Severe, Severe, Mild, Moderate, Mild, …\n$ MyalgiaYN         <fct> Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Ye…\n$ RunnyNose         <fct> No, No, Yes, Yes, No, No, Yes, Yes, Yes, Yes, No, No…\n$ AbPain            <fct> No, No, Yes, No, No, No, No, No, No, No, Yes, Yes, N…\n$ ChestPain         <fct> No, No, Yes, No, No, Yes, Yes, No, No, No, No, Yes, …\n$ Diarrhea          <fct> No, No, No, No, No, Yes, No, No, No, No, No, No, No,…\n$ EyePn             <fct> No, No, No, No, Yes, No, No, No, No, No, Yes, No, Ye…\n$ Insomnia          <fct> No, No, Yes, Yes, Yes, No, No, Yes, Yes, Yes, Yes, Y…\n$ ItchyEye          <fct> No, No, No, No, No, No, No, No, No, No, No, No, Yes,…\n$ Nausea            <fct> No, No, Yes, Yes, Yes, Yes, No, No, Yes, Yes, Yes, Y…\n$ EarPn             <fct> No, Yes, No, Yes, No, No, No, No, No, No, No, Yes, Y…\n$ Hearing           <fct> No, Yes, No, No, No, No, No, No, No, No, No, No, No,…\n$ Pharyngitis       <fct> Yes, Yes, Yes, Yes, Yes, Yes, Yes, No, No, No, Yes, …\n$ Breathless        <fct> No, No, Yes, No, No, Yes, No, No, No, Yes, No, Yes, …\n$ ToothPn           <fct> No, No, Yes, No, No, No, No, No, Yes, No, No, Yes, N…\n$ Vision            <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, …\n$ Vomit             <fct> No, No, No, No, No, No, Yes, No, No, No, Yes, Yes, N…\n$ Wheeze            <fct> No, No, No, Yes, No, Yes, No, No, No, No, No, Yes, N…\n$ BodyTemp          <dbl> 98.3, 100.4, 100.8, 98.8, 100.5, 98.4, 102.5, 98.4, …\n$ RapidFluA         <fct> Presumptive Negative For Influenza A, NA, Presumptiv…\n$ RapidFluB         <fct> Presumptive Negative For Influenza B, NA, Presumptiv…\n$ PCRFluA           <fct> NA, NA, NA, NA, NA, NA,  Influenza A Not Detected, N…\n$ PCRFluB           <fct> NA, NA, NA, NA, NA, NA,  Influenza B Not Detected, N…\n$ TransScore1       <dbl> 1, 3, 4, 5, 0, 2, 2, 5, 4, 4, 2, 3, 2, 5, 3, 5, 1, 5…\n$ TransScore1F      <fct> 1, 3, 4, 5, 0, 2, 2, 5, 4, 4, 2, 3, 2, 5, 3, 5, 1, 5…\n$ TransScore2       <dbl> 1, 2, 3, 4, 0, 2, 2, 4, 3, 3, 1, 2, 2, 4, 2, 4, 1, 4…\n$ TransScore2F      <fct> 1, 2, 3, 4, 0, 2, 2, 4, 3, 3, 1, 2, 2, 4, 2, 4, 1, 4…\n$ TransScore3       <dbl> 1, 1, 2, 3, 0, 2, 2, 3, 2, 2, 0, 1, 1, 3, 1, 3, 1, 3…\n$ TransScore3F      <fct> 1, 1, 2, 3, 0, 2, 2, 3, 2, 2, 0, 1, 1, 3, 1, 3, 1, 3…\n$ TransScore4       <dbl> 0, 2, 4, 4, 0, 1, 1, 4, 3, 3, 2, 2, 2, 4, 3, 4, 0, 4…\n$ TransScore4F      <fct> 0, 2, 4, 4, 0, 1, 1, 4, 3, 3, 2, 2, 2, 4, 3, 4, 0, 4…\n$ ImpactScore       <int> 7, 8, 14, 12, 11, 12, 8, 7, 10, 7, 13, 17, 11, 13, 9…\n$ ImpactScore2      <int> 6, 7, 13, 11, 10, 11, 7, 6, 9, 6, 12, 16, 10, 12, 8,…\n$ ImpactScore3      <int> 3, 4, 9, 7, 6, 7, 3, 3, 6, 4, 7, 11, 6, 8, 4, 4, 5, …\n$ ImpactScoreF      <fct> 7, 8, 14, 12, 11, 12, 8, 7, 10, 7, 13, 17, 11, 13, 9…\n$ ImpactScore2F     <fct> 6, 7, 13, 11, 10, 11, 7, 6, 9, 6, 12, 16, 10, 12, 8,…\n$ ImpactScore3F     <fct> 3, 4, 9, 7, 6, 7, 3, 3, 6, 4, 7, 11, 6, 8, 4, 4, 5, …\n$ ImpactScoreFD     <fct> 7, 8, 14, 12, 11, 12, 8, 7, 10, 7, 13, 17, 11, 13, 9…\n$ TotalSymp1        <dbl> 8, 11, 18, 17, 11, 14, 10, 12, 14, 11, 15, 20, 13, 1…\n$ TotalSymp1F       <fct> 8, 11, 18, 17, 11, 14, 10, 12, 14, 11, 15, 20, 13, 1…\n$ TotalSymp2        <dbl> 8, 10, 17, 16, 11, 14, 10, 11, 13, 10, 14, 19, 13, 1…\n$ TotalSymp3        <dbl> 8, 9, 16, 15, 11, 14, 10, 10, 12, 9, 13, 18, 12, 16,…\n\nsummary(data)\n\n                                           DxName1   \n Influenza like illness - Clinical Dx          :328  \n Influenza - Virus Identified                  :131  \n Fever, unspecified                            :101  \n Cough                                         : 66  \n Acute pharyngitis, unspecified                : 50  \n Acute upper respiratory infection, unspecified: 22  \n (Other)                                       : 37  \n                                 DxName2   \n Influenza - Virus Identified        :126  \n Influenza like illness - Clinical Dx:115  \n Fever, unspecified                  : 45  \n Cough                               : 41  \n Acute pharyngitis, unspecified      : 31  \n (Other)                             : 97  \n NA's                                :280  \n                                 DxName3   \n Influenza - Virus Identified        : 23  \n Influenza like illness - Clinical Dx: 14  \n Cough                               : 10  \n Fever, unspecified                  :  6  \n Acute pharyngitis, unspecified      :  4  \n (Other)                             : 52  \n NA's                                :626  \n                                           DxName4   \n Influenza - Virus Identified                  :  3  \n Acute upper respiratory infection, unspecified:  2  \n Encounter for immunization                    :  2  \n Influenza like illness - Clinical Dx          :  2  \n Acute pharyngitis, unspecified                :  1  \n (Other)                                       :  9  \n NA's                                          :716  \n                                                                                               DxName5   \n Acute suppurative otitis media without spontaneous rupture of ear drum, right ear                 :  0  \n Encounter for immunization                                                                        :  0  \n Headache                                                                                          :  1  \n Other infectious mononucleosis without complication                                               :  0  \n Strain of other flexor muscle, fascia and tendon at forearm level, right arm, subsequent encounter:  0  \n NA's                                                                                              :734  \n                                                                                                         \n Unique.Visit       ActivityLevel    ActivityLevelF SwollenLymphNodes\n Length:735         Min.   : 0.000   3      :125    No :421          \n Class :character   1st Qu.: 3.000   5      : 97    Yes:314          \n Mode  :character   Median : 4.000   4      : 95                     \n                    Mean   : 4.463   2      : 80                     \n                    3rd Qu.: 6.000   7      : 68                     \n                    Max.   :10.000   6      : 66                     \n                                     (Other):204                     \n ChestCongestion ChillsSweats NasalCongestion CoughYN   Sneeze    Fatigue  \n No :326         No :131      No :170         No : 75   No :340   No : 64  \n Yes:409         Yes:604      Yes:565         Yes:660   Yes:395   Yes:671  \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n                                                                           \n SubjectiveFever Headache      Weakness   WeaknessYN  CoughIntensity CoughYN2 \n No :230         No :115   None    : 49   No : 49    None    : 47    No : 47  \n Yes:505         Yes:620   Mild    :224   Yes:686    Mild    :156    Yes:688  \n                           Moderate:341              Moderate:360             \n                           Severe  :121              Severe  :172             \n                                                                              \n                                                                              \n                                                                              \n     Myalgia    MyalgiaYN RunnyNose AbPain    ChestPain Diarrhea  EyePn    \n None    : 79   No : 79   No :211   No :642   No :501   No :636   No :622  \n Mild    :214   Yes:656   Yes:524   Yes: 93   Yes:234   Yes: 99   Yes:113  \n Moderate:327                                                              \n Severe  :115                                                              \n                                                                           \n                                                                           \n                                                                           \n Insomnia  ItchyEye  Nausea    EarPn     Hearing   Pharyngitis Breathless\n No :316   No :553   No :477   No :573   No :705   No :121     No :438   \n Yes:419   Yes:182   Yes:258   Yes:162   Yes: 30   Yes:614     Yes:297   \n                                                                         \n                                                                         \n                                                                         \n                                                                         \n                                                                         \n ToothPn   Vision    Vomit     Wheeze       BodyTemp     \n No :569   No :716   No :656   No :514   Min.   : 97.20  \n Yes:166   Yes: 19   Yes: 79   Yes:221   1st Qu.: 98.20  \n                                         Median : 98.50  \n                                         Mean   : 98.94  \n                                         3rd Qu.: 99.30  \n                                         Max.   :103.10  \n                                         NA's   :5       \n                                RapidFluA  \n Positive for Influenza A            :169  \n Presumptive Negative For Influenza A:159  \n NA's                                :407  \n                                           \n                                           \n                                           \n                                           \n                                RapidFluB                        PCRFluA   \n Positive for Influenza B            : 26    Influenza A Detected    :120  \n Presumptive Negative For Influenza B:302    Influenza A Not Detected: 33  \n NA's                                :407   Assay Invalid            :  0  \n                                            Indeterminate            :  1  \n                                            NA's                     :581  \n                                                                           \n                                                                           \n                      PCRFluB     TransScore1    TransScore1F  TransScore2   \n  Influenza B Detected    :  9   Min.   :0.000   0: 13        Min.   :0.000  \n  Influenza B Not Detected:145   1st Qu.:3.000   1: 53        1st Qu.:2.000  \n Assay Invalid            :  0   Median :4.000   2:107        Median :3.000  \n NA's                     :581   Mean   :3.473   3:157        Mean   :2.917  \n                                 3rd Qu.:5.000   4:210        3rd Qu.:4.000  \n                                 Max.   :5.000   5:195        Max.   :4.000  \n                                                                             \n TransScore2F  TransScore3    TransScore3F  TransScore4    TransScore4F\n 0: 13        Min.   :0.000   0: 24        Min.   :0.000   0: 50       \n 1: 89        1st Qu.:1.000   1:166        1st Qu.:2.000   1:103       \n 2:138        Median :2.000   2:222        Median :3.000   2:154       \n 3:201        Mean   :2.148   3:323        Mean   :2.576   3:230       \n 4:294        3rd Qu.:3.000                3rd Qu.:4.000   4:198       \n              Max.   :3.000                Max.   :4.000               \n                                                                       \n  ImpactScore      ImpactScore2     ImpactScore3    ImpactScoreF ImpactScore2F\n Min.   : 2.000   Min.   : 2.000   Min.   : 0.00   8      :105   7      :107  \n 1st Qu.: 8.000   1st Qu.: 7.000   1st Qu.: 3.00   9      :104   8      :102  \n Median : 9.000   Median : 8.000   Median : 5.00   10     : 88   9      : 90  \n Mean   : 9.514   Mean   : 8.581   Mean   : 5.06   7      : 84   10     : 86  \n 3rd Qu.:11.000   3rd Qu.:10.000   3rd Qu.: 7.00   11     : 82   6      : 85  \n Max.   :18.000   Max.   :17.000   Max.   :13.00   12     : 58   11     : 59  \n                                                   (Other):214   (Other):206  \n ImpactScore3F ImpactScoreFD   TotalSymp1     TotalSymp1F    TotalSymp2   \n 4      :134   8      :105   Min.   : 5.00   12     : 86   Min.   : 4.00  \n 5      :112   9      :104   1st Qu.:11.00   13     : 84   1st Qu.:10.00  \n 3      :108   10     : 88   Median :13.00   14     : 80   Median :12.00  \n 6      :102   7      : 84   Mean   :12.99   11     : 72   Mean   :12.43  \n 7      : 66   11     : 82   3rd Qu.:15.00   10     : 62   3rd Qu.:15.00  \n 2      : 64   12     : 58   Max.   :23.00   15     : 61   Max.   :22.00  \n (Other):149   (Other):214                   (Other):290                  \n   TotalSymp3   \n Min.   : 3.00  \n 1st Qu.:10.00  \n Median :12.00  \n Mean   :11.66  \n 3rd Qu.:14.00  \n Max.   :21.00  \n                \n\nhead(data)\n\n                               DxName1\n1 Influenza like illness - Clinical Dx\n2       Acute tonsillitis, unspecified\n3 Influenza like illness - Clinical Dx\n4 Influenza like illness - Clinical Dx\n5       Acute pharyngitis, unspecified\n6 Influenza like illness - Clinical Dx\n                                       DxName2 DxName3 DxName4 DxName5\n1                                         <NA>    <NA>    <NA>    <NA>\n2         Influenza like illness - Clinical Dx    <NA>    <NA>    <NA>\n3               Acute pharyngitis, unspecified    <NA>    <NA>    <NA>\n4 Unspecified asthma with (acute) exacerbation    <NA>    <NA>    <NA>\n5         Influenza like illness - Clinical Dx    <NA>    <NA>    <NA>\n6                                         <NA>    <NA>    <NA>    <NA>\n  Unique.Visit ActivityLevel ActivityLevelF SwollenLymphNodes ChestCongestion\n1 340_17632125            10             10               Yes              No\n2 340_17794836             6              6               Yes             Yes\n3 342_17737773             2              2               Yes             Yes\n4 342_17806002             2              2               Yes             Yes\n5 342_17610918             5              5               Yes              No\n6 343_17543967             3              3                No              No\n  ChillsSweats NasalCongestion CoughYN Sneeze Fatigue SubjectiveFever Headache\n1           No              No     Yes     No     Yes             Yes      Yes\n2           No             Yes     Yes     No     Yes             Yes      Yes\n3          Yes             Yes      No    Yes     Yes             Yes      Yes\n4          Yes             Yes     Yes    Yes     Yes             Yes      Yes\n5          Yes              No      No     No     Yes             Yes      Yes\n6          Yes              No     Yes    Yes     Yes             Yes      Yes\n  Weakness WeaknessYN CoughIntensity CoughYN2  Myalgia MyalgiaYN RunnyNose\n1     Mild        Yes         Severe      Yes     Mild       Yes        No\n2   Severe        Yes         Severe      Yes   Severe       Yes        No\n3   Severe        Yes           Mild      Yes   Severe       Yes       Yes\n4   Severe        Yes       Moderate      Yes   Severe       Yes       Yes\n5 Moderate        Yes           None       No     Mild       Yes        No\n6 Moderate        Yes       Moderate      Yes Moderate       Yes        No\n  AbPain ChestPain Diarrhea EyePn Insomnia ItchyEye Nausea EarPn Hearing\n1     No        No       No    No       No       No     No    No      No\n2     No        No       No    No       No       No     No   Yes     Yes\n3    Yes       Yes       No    No      Yes       No    Yes    No      No\n4     No        No       No    No      Yes       No    Yes   Yes      No\n5     No        No       No   Yes      Yes       No    Yes    No      No\n6     No       Yes      Yes    No       No       No    Yes    No      No\n  Pharyngitis Breathless ToothPn Vision Vomit Wheeze BodyTemp\n1         Yes         No      No     No    No     No     98.3\n2         Yes         No      No     No    No     No    100.4\n3         Yes        Yes     Yes     No    No     No    100.8\n4         Yes         No      No     No    No    Yes     98.8\n5         Yes         No      No     No    No     No    100.5\n6         Yes        Yes      No     No    No    Yes     98.4\n                             RapidFluA                            RapidFluB\n1 Presumptive Negative For Influenza A Presumptive Negative For Influenza B\n2                                 <NA>                                 <NA>\n3 Presumptive Negative For Influenza A Presumptive Negative For Influenza B\n4 Presumptive Negative For Influenza A Presumptive Negative For Influenza B\n5                                 <NA>                                 <NA>\n6                                 <NA>                                 <NA>\n  PCRFluA PCRFluB TransScore1 TransScore1F TransScore2 TransScore2F TransScore3\n1    <NA>    <NA>           1            1           1            1           1\n2    <NA>    <NA>           3            3           2            2           1\n3    <NA>    <NA>           4            4           3            3           2\n4    <NA>    <NA>           5            5           4            4           3\n5    <NA>    <NA>           0            0           0            0           0\n6    <NA>    <NA>           2            2           2            2           2\n  TransScore3F TransScore4 TransScore4F ImpactScore ImpactScore2 ImpactScore3\n1            1           0            0           7            6            3\n2            1           2            2           8            7            4\n3            2           4            4          14           13            9\n4            3           4            4          12           11            7\n5            0           0            0          11           10            6\n6            2           1            1          12           11            7\n  ImpactScoreF ImpactScore2F ImpactScore3F ImpactScoreFD TotalSymp1 TotalSymp1F\n1            7             6             3             7          8           8\n2            8             7             4             8         11          11\n3           14            13             9            14         18          18\n4           12            11             7            12         17          17\n5           11            10             6            11         11          11\n6           12            11             7            12         14          14\n  TotalSymp2 TotalSymp3\n1          8          8\n2         10          9\n3         17         16\n4         16         15\n5         11         11\n6         14         14\n\nskimr::skim(data)\n\n\nData summary\n\n\nName\ndata\n\n\nNumber of rows\n735\n\n\nNumber of columns\n63\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n50\n\n\nnumeric\n12\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nUnique.Visit\n0\n1\n10\n12\n0\n735\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nDxName1\n0\n1.00\nFALSE\n25\nInf: 328, Inf: 131, Fev: 101, Cou: 66\n\n\nDxName2\n280\n0.62\nFALSE\n42\nInf: 126, Inf: 115, Fev: 45, Cou: 41\n\n\nDxName3\n626\n0.15\nFALSE\n37\nInf: 23, Inf: 14, Cou: 10, Fev: 6\n\n\nDxName4\n716\n0.03\nFALSE\n14\nInf: 3, Acu: 2, Enc: 2, Inf: 2\n\n\nDxName5\n734\n0.00\nFALSE\n1\nHea: 1, Acu: 0, Enc: 0, Oth: 0\n\n\nActivityLevelF\n0\n1.00\nFALSE\n11\n3: 125, 5: 97, 4: 95, 2: 80\n\n\nSwollenLymphNodes\n0\n1.00\nFALSE\n2\nNo: 421, Yes: 314\n\n\nChestCongestion\n0\n1.00\nFALSE\n2\nYes: 409, No: 326\n\n\nChillsSweats\n0\n1.00\nFALSE\n2\nYes: 604, No: 131\n\n\nNasalCongestion\n0\n1.00\nFALSE\n2\nYes: 565, No: 170\n\n\nCoughYN\n0\n1.00\nFALSE\n2\nYes: 660, No: 75\n\n\nSneeze\n0\n1.00\nFALSE\n2\nYes: 395, No: 340\n\n\nFatigue\n0\n1.00\nFALSE\n2\nYes: 671, No: 64\n\n\nSubjectiveFever\n0\n1.00\nFALSE\n2\nYes: 505, No: 230\n\n\nHeadache\n0\n1.00\nFALSE\n2\nYes: 620, No: 115\n\n\nWeakness\n0\n1.00\nFALSE\n4\nMod: 341, Mil: 224, Sev: 121, Non: 49\n\n\nWeaknessYN\n0\n1.00\nFALSE\n2\nYes: 686, No: 49\n\n\nCoughIntensity\n0\n1.00\nFALSE\n4\nMod: 360, Sev: 172, Mil: 156, Non: 47\n\n\nCoughYN2\n0\n1.00\nFALSE\n2\nYes: 688, No: 47\n\n\nMyalgia\n0\n1.00\nFALSE\n4\nMod: 327, Mil: 214, Sev: 115, Non: 79\n\n\nMyalgiaYN\n0\n1.00\nFALSE\n2\nYes: 656, No: 79\n\n\nRunnyNose\n0\n1.00\nFALSE\n2\nYes: 524, No: 211\n\n\nAbPain\n0\n1.00\nFALSE\n2\nNo: 642, Yes: 93\n\n\nChestPain\n0\n1.00\nFALSE\n2\nNo: 501, Yes: 234\n\n\nDiarrhea\n0\n1.00\nFALSE\n2\nNo: 636, Yes: 99\n\n\nEyePn\n0\n1.00\nFALSE\n2\nNo: 622, Yes: 113\n\n\nInsomnia\n0\n1.00\nFALSE\n2\nYes: 419, No: 316\n\n\nItchyEye\n0\n1.00\nFALSE\n2\nNo: 553, Yes: 182\n\n\nNausea\n0\n1.00\nFALSE\n2\nNo: 477, Yes: 258\n\n\nEarPn\n0\n1.00\nFALSE\n2\nNo: 573, Yes: 162\n\n\nHearing\n0\n1.00\nFALSE\n2\nNo: 705, Yes: 30\n\n\nPharyngitis\n0\n1.00\nFALSE\n2\nYes: 614, No: 121\n\n\nBreathless\n0\n1.00\nFALSE\n2\nNo: 438, Yes: 297\n\n\nToothPn\n0\n1.00\nFALSE\n2\nNo: 569, Yes: 166\n\n\nVision\n0\n1.00\nFALSE\n2\nNo: 716, Yes: 19\n\n\nVomit\n0\n1.00\nFALSE\n2\nNo: 656, Yes: 79\n\n\nWheeze\n0\n1.00\nFALSE\n2\nNo: 514, Yes: 221\n\n\nRapidFluA\n407\n0.45\nFALSE\n2\nPos: 169, Pre: 159\n\n\nRapidFluB\n407\n0.45\nFALSE\n2\nPre: 302, Pos: 26\n\n\nPCRFluA\n581\n0.21\nFALSE\n3\nIn: 120, In: 33, Ind: 1, Ass: 0\n\n\nPCRFluB\n581\n0.21\nFALSE\n2\nIn: 145, In: 9, Ass: 0\n\n\nTransScore1F\n0\n1.00\nFALSE\n6\n4: 210, 5: 195, 3: 157, 2: 107\n\n\nTransScore2F\n0\n1.00\nFALSE\n5\n4: 294, 3: 201, 2: 138, 1: 89\n\n\nTransScore3F\n0\n1.00\nFALSE\n4\n3: 323, 2: 222, 1: 166, 0: 24\n\n\nTransScore4F\n0\n1.00\nFALSE\n5\n3: 230, 4: 198, 2: 154, 1: 103\n\n\nImpactScoreF\n0\n1.00\nFALSE\n17\n8: 105, 9: 104, 10: 88, 7: 84\n\n\nImpactScore2F\n0\n1.00\nFALSE\n16\n7: 107, 8: 102, 9: 90, 10: 86\n\n\nImpactScore3F\n0\n1.00\nFALSE\n14\n4: 134, 5: 112, 3: 108, 6: 102\n\n\nImpactScoreFD\n0\n1.00\nFALSE\n17\n8: 105, 9: 104, 10: 88, 7: 84\n\n\nTotalSymp1F\n0\n1.00\nFALSE\n19\n12: 86, 13: 84, 14: 80, 11: 72\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nActivityLevel\n0\n1.00\n4.46\n2.64\n0.0\n3.0\n4.0\n6.0\n10.0\n▆▇▆▅▂\n\n\nBodyTemp\n5\n0.99\n98.94\n1.20\n97.2\n98.2\n98.5\n99.3\n103.1\n▇▇▂▁▁\n\n\nTransScore1\n0\n1.00\n3.47\n1.31\n0.0\n3.0\n4.0\n5.0\n5.0\n▂▅▆▇▇\n\n\nTransScore2\n0\n1.00\n2.92\n1.11\n0.0\n2.0\n3.0\n4.0\n4.0\n▁▂▃▆▇\n\n\nTransScore3\n0\n1.00\n2.15\n0.88\n0.0\n1.0\n2.0\n3.0\n3.0\n▁▅▁▆▇\n\n\nTransScore4\n0\n1.00\n2.58\n1.21\n0.0\n2.0\n3.0\n4.0\n4.0\n▂▃▆▇▇\n\n\nImpactScore\n0\n1.00\n9.51\n2.84\n2.0\n8.0\n9.0\n11.0\n18.0\n▂▇▇▅▁\n\n\nImpactScore2\n0\n1.00\n8.58\n2.78\n2.0\n7.0\n8.0\n10.0\n17.0\n▂▇▆▃▁\n\n\nImpactScore3\n0\n1.00\n5.06\n2.34\n0.0\n3.0\n5.0\n7.0\n13.0\n▂▇▃▂▁\n\n\nTotalSymp1\n0\n1.00\n12.99\n3.41\n5.0\n11.0\n13.0\n15.0\n23.0\n▂▇▇▅▁\n\n\nTotalSymp2\n0\n1.00\n12.43\n3.22\n4.0\n10.0\n12.0\n15.0\n22.0\n▁▇▇▅▁\n\n\nTotalSymp3\n0\n1.00\n11.66\n3.10\n3.0\n10.0\n12.0\n14.0\n21.0\n▁▇▇▅▁\n\n\n\n\n\n\n\nChecking variable names\n\nnames(data)\n\n [1] \"DxName1\"           \"DxName2\"           \"DxName3\"          \n [4] \"DxName4\"           \"DxName5\"           \"Unique.Visit\"     \n [7] \"ActivityLevel\"     \"ActivityLevelF\"    \"SwollenLymphNodes\"\n[10] \"ChestCongestion\"   \"ChillsSweats\"      \"NasalCongestion\"  \n[13] \"CoughYN\"           \"Sneeze\"            \"Fatigue\"          \n[16] \"SubjectiveFever\"   \"Headache\"          \"Weakness\"         \n[19] \"WeaknessYN\"        \"CoughIntensity\"    \"CoughYN2\"         \n[22] \"Myalgia\"           \"MyalgiaYN\"         \"RunnyNose\"        \n[25] \"AbPain\"            \"ChestPain\"         \"Diarrhea\"         \n[28] \"EyePn\"             \"Insomnia\"          \"ItchyEye\"         \n[31] \"Nausea\"            \"EarPn\"             \"Hearing\"          \n[34] \"Pharyngitis\"       \"Breathless\"        \"ToothPn\"          \n[37] \"Vision\"            \"Vomit\"             \"Wheeze\"           \n[40] \"BodyTemp\"          \"RapidFluA\"         \"RapidFluB\"        \n[43] \"PCRFluA\"           \"PCRFluB\"           \"TransScore1\"      \n[46] \"TransScore1F\"      \"TransScore2\"       \"TransScore2F\"     \n[49] \"TransScore3\"       \"TransScore3F\"      \"TransScore4\"      \n[52] \"TransScore4F\"      \"ImpactScore\"       \"ImpactScore2\"     \n[55] \"ImpactScore3\"      \"ImpactScoreF\"      \"ImpactScore2F\"    \n[58] \"ImpactScore3F\"     \"ImpactScoreFD\"     \"TotalSymp1\"       \n[61] \"TotalSymp1F\"       \"TotalSymp2\"        \"TotalSymp3\"       \n\n\n\n\nStep 1: Removing all variables that have Score or Total or FluA or FluB or Dxname or Activity in their name\n\ndata1 <- data %>% dplyr:: select(-matches(\"Score|Total|FluA|FluB|Dxname|Activity\"))\n\n\n\nStep 2: Removing the variable Unique.Visit.\n\ndata2 <- data1[,-1]\n\n\n\nStep 3: Removing all NA observations in the dataset\n\ndata3 <- na.omit(data2)\n\n\n\nNaming the newly processed data as cleaned_data\n\ncleaned_data <- data3\n\n\n\nSaving the cleaned data\n\nsave_data_location <- here::here(\"fluanalysis\", \"data\", \"cleaned_data.rds\")\nsaveRDS(cleaned_data, file = save_data_location)\n\n\n\nAddition for Module 11: Preparing data for Machine Learning\n\nLoading the previous cleaned data for additional cleaning\n\ncleaned_data <- readRDS(here(\"fluanalysis\", \"data\", \"cleaned_data.rds\"))\n\n\n\nWe are getting rid of repetitive variables\n\ncleaned_data_v2 <- cleaned_data %>% select(-CoughYN,-WeaknessYN,-CoughYN2,-MyalgiaYN)\n\n\n\nWe are getting rid of hearing and vision variables since they have less than 5- entries (Y/N)\n\ncleaned_data_v3 <- cleaned_data_v2 %>% select(-Vision,-Hearing)\n\nOur data is now made of 730 observations and 26 variables. This is what we will use for Module 11.\n\nsaveRDS(cleaned_data_v3, file = here(\"fluanalysis\", \"data\", \"cleaned_data_mod11.rds\"))"
  },
  {
    "objectID": "fluanalysis/code/fitting.html",
    "href": "fluanalysis/code/fitting.html",
    "title": "Model Fitting",
    "section": "",
    "text": "In this section, we will explore the following tasks: 1. Loads cleaned data. 2. Fits a linear model to the continuous outcome (Body temperature) using only the main predictor of interest. 3. Fits another linear model to the continuous outcome using all (important) predictors of interest. 4. Compares the model results for the model with just the main predictor and all predictors. 5. Fits a logistic model to the categorical outcome (Nausea) using only the main predictor of interest. 6. Fits another logistic model to the categorical outcome using all (important) predictors of interest. 7. Compares the model results for the categorical model with just the main predictor and all predictors.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\nlibrary(dplyr)\nlibrary(skimr)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(performance)\n\n\n\nLoading data\n\n#Path to data. \ndata_location <- here::here(\"fluanalysis\", \"data\", \"cleaned_data.rds\")\n#load data\nmydata <- readRDS(data_location)\n\n\n\nThis sets up the linear model\n\nlm_mod <- linear_reg() %>% set_engine(\"lm\")\n\n\n\nFitting a linear model to the continuous outcome (Body temp) using only the main predictor of interest (RunnyNose)\n\nlm_fit1 <- lm_mod %>% fit(BodyTemp ~ RunnyNose, data = mydata)\ntidy(lm_fit1)\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic p.value\n  <chr>           <dbl>     <dbl>     <dbl>   <dbl>\n1 (Intercept)    99.1      0.0819   1210.   0      \n2 RunnyNoseYes   -0.293    0.0971     -3.01 0.00268\n\n\n\n\nFitting a linear model to the continuous outcome (Body temp) using all other predictors of interest\n\nlm_fit2 <- lm_mod %>% fit(BodyTemp ~ ., data = mydata)\ntidy(lm_fit2)\n\n# A tibble: 38 × 5\n   term                 estimate std.error statistic   p.value\n   <chr>                   <dbl>     <dbl>     <dbl>     <dbl>\n 1 (Intercept)           97.9       0.304   322.     0        \n 2 SwollenLymphNodesYes  -0.165     0.0920   -1.80   0.0727   \n 3 ChestCongestionYes     0.0873    0.0975    0.895  0.371    \n 4 ChillsSweatsYes        0.201     0.127     1.58   0.114    \n 5 NasalCongestionYes    -0.216     0.114    -1.90   0.0584   \n 6 CoughYNYes             0.314     0.241     1.30   0.193    \n 7 SneezeYes             -0.362     0.0983   -3.68   0.000249 \n 8 FatigueYes             0.265     0.161     1.65   0.0996   \n 9 SubjectiveFeverYes     0.437     0.103     4.22   0.0000271\n10 HeadacheYes            0.0115    0.125     0.0913 0.927    \n# … with 28 more rows\n\n\n\n\nComparing the above linear models: lm_fit1 which is a reduced model and lm_fit2 which is a full model\n\nanova(lm_fit1$fit, lm_fit2$fit)\n\nAnalysis of Variance Table\n\nModel 1: BodyTemp ~ RunnyNose\nModel 2: BodyTemp ~ SwollenLymphNodes + ChestCongestion + ChillsSweats + \n    NasalCongestion + CoughYN + Sneeze + Fatigue + SubjectiveFever + \n    Headache + Weakness + WeaknessYN + CoughIntensity + CoughYN2 + \n    Myalgia + MyalgiaYN + RunnyNose + AbPain + ChestPain + Diarrhea + \n    EyePn + Insomnia + ItchyEye + Nausea + EarPn + Hearing + \n    Pharyngitis + Breathless + ToothPn + Vision + Vomit + Wheeze\n  Res.Df     RSS Df Sum of Sq      F    Pr(>F)    \n1    728 1030.53                                  \n2    695  909.12 33    121.41 2.8126 4.811e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nglance(lm_fit1) %>%\n  dplyr::select(adj.r.squared, sigma, AIC, BIC, p.value)\n\n# A tibble: 1 × 5\n  adj.r.squared sigma   AIC   BIC p.value\n          <dbl> <dbl> <dbl> <dbl>   <dbl>\n1        0.0110  1.19 2329. 2343. 0.00268\n\nglance(lm_fit2) %>%\n  dplyr::select(adj.r.squared, sigma, AIC, BIC, p.value)\n\n# A tibble: 1 × 5\n  adj.r.squared sigma   AIC   BIC      p.value\n          <dbl> <dbl> <dbl> <dbl>        <dbl>\n1        0.0860  1.14 2304. 2469. 0.0000000420\n\n# Another way to compare these models\ncompare_performance(lm_fit1, lm_fit2)\n\n# Comparison of Model Performance Indices\n\nName    | Model |  AIC (weights) | AICc (weights) |  BIC (weights) |    R2 | R2 (adj.) |  RMSE | Sigma\n------------------------------------------------------------------------------------------------------\nlm_fit1 |   _lm | 2329.3 (<.001) | 2329.4 (<.001) | 2343.1 (>.999) | 0.012 |     0.011 | 1.188 | 1.190\nlm_fit2 |   _lm | 2303.8 (>.999) | 2307.7 (>.999) | 2469.2 (<.001) | 0.129 |     0.086 | 1.116 | 1.144\n\n\n\n\nThis sets up logistics regression\n\nlog_mod <- logistic_reg() %>%\n  set_engine(\"glm\")\n\n\n\nFitting logistic model to the categorical outcome (Nausea) using only the main predictor of interest (RunnyNose)\n\nlog_fit1 <- log_mod %>% fit(Nausea ~ RunnyNose, data = mydata)\ntidy(log_fit1)\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic    p.value\n  <chr>           <dbl>     <dbl>     <dbl>      <dbl>\n1 (Intercept)   -0.658      0.145    -4.53  0.00000589\n2 RunnyNoseYes   0.0502     0.172     0.292 0.770     \n\n\n\n\nFitting logistic model to the categorical outcome (Nausea) using all other predictors of interest\n\nlog_fit2 <- log_mod %>% fit(Nausea ~ ., data = mydata)\ntidy(log_fit2)\n\n# A tibble: 38 × 5\n   term                 estimate std.error statistic p.value\n   <chr>                   <dbl>     <dbl>     <dbl>   <dbl>\n 1 (Intercept)             0.223     7.83     0.0285  0.977 \n 2 SwollenLymphNodesYes   -0.251     0.196   -1.28    0.200 \n 3 ChestCongestionYes      0.276     0.213    1.30    0.195 \n 4 ChillsSweatsYes         0.274     0.288    0.952   0.341 \n 5 NasalCongestionYes      0.426     0.255    1.67    0.0944\n 6 CoughYNYes             -0.140     0.519   -0.271   0.787 \n 7 SneezeYes               0.177     0.210    0.840   0.401 \n 8 FatigueYes              0.229     0.372    0.616   0.538 \n 9 SubjectiveFeverYes      0.278     0.225    1.23    0.218 \n10 HeadacheYes             0.331     0.285    1.16    0.245 \n# … with 28 more rows\n\n\n\n\nComparing the above logistic models: log_fit1 which is a reduced model and log_fit2 which is a full model\n\nanova(log_fit1$fit, log_fit2$fit)\n\nAnalysis of Deviance Table\n\nModel 1: Nausea ~ RunnyNose\nModel 2: Nausea ~ SwollenLymphNodes + ChestCongestion + ChillsSweats + \n    NasalCongestion + CoughYN + Sneeze + Fatigue + SubjectiveFever + \n    Headache + Weakness + WeaknessYN + CoughIntensity + CoughYN2 + \n    Myalgia + MyalgiaYN + RunnyNose + AbPain + ChestPain + Diarrhea + \n    EyePn + Insomnia + ItchyEye + EarPn + Hearing + Pharyngitis + \n    Breathless + ToothPn + Vision + Vomit + Wheeze + BodyTemp\n  Resid. Df Resid. Dev Df Deviance\n1       728     944.57            \n2       695     751.47 33    193.1\n\ncompare_performance(log_fit1, log_fit2)\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\n\n# Comparison of Model Performance Indices\n\nName     | Model | AIC (weights) | AICc (weights) | BIC (weights) | Tjur's R2 |  RMSE | Sigma | Log_loss | Score_log | Score_spherical |   PCP\n----------------------------------------------------------------------------------------------------------------------------------------------\nlog_fit1 |  _glm | 948.6 (<.001) |  948.6 (<.001) | 957.8 (>.999) | 1.169e-04 | 0.477 | 1.139 |    0.647 |  -107.871 |           0.012 | 0.545\nlog_fit2 |  _glm | 821.5 (>.999) |  825.1 (>.999) | 982.2 (<.001) |     0.247 | 0.414 | 1.040 |    0.515 |      -Inf |           0.002 | 0.658"
  },
  {
    "objectID": "fluanalysis/code/modeleval.html",
    "href": "fluanalysis/code/modeleval.html",
    "title": "Model Evaluation",
    "section": "",
    "text": "library(here)\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(performance)\nlibrary(dplyr)\nlibrary(skimr)"
  },
  {
    "objectID": "fluanalysis/code/modeleval.html#continuous-everything",
    "href": "fluanalysis/code/modeleval.html#continuous-everything",
    "title": "Model Evaluation",
    "section": "Continuous + Everything",
    "text": "Continuous + Everything\nRecipe for a regression model to our categorical outcome of interest (BodyTemp)\n\ncont_recipe1 <- \n  recipe(BodyTemp ~ ., data = train_data) \n\n\nFit a Model with Workflow\n\ncont_model1 <- \n  linear_reg()  %>% \n  set_engine(\"lm\") \n\ncont1_wflow <- \n  workflow() %>% \n  add_model(cont_model1) %>% \n  add_recipe(cont_recipe1)\n\ncont1_fit <- \n  cont1_wflow %>% \n  fit(data = train_data)\n\ncont1_fit %>% \n  extract_fit_parsnip() %>% \n  tidy()\n\n# A tibble: 38 × 5\n   term                 estimate std.error statistic  p.value\n   <chr>                   <dbl>     <dbl>     <dbl>    <dbl>\n 1 (Intercept)           97.5        0.382   255.    0       \n 2 SwollenLymphNodesYes  -0.289      0.108    -2.67  0.00781 \n 3 ChestCongestionYes     0.135      0.115     1.18  0.239   \n 4 ChillsSweatsYes        0.199      0.148     1.34  0.179   \n 5 NasalCongestionYes    -0.199      0.130    -1.53  0.127   \n 6 CoughYNYes             0.328      0.273     1.20  0.230   \n 7 SneezeYes             -0.335      0.115    -2.91  0.00377 \n 8 FatigueYes             0.267      0.197     1.36  0.176   \n 9 SubjectiveFeverYes     0.458      0.121     3.77  0.000180\n10 HeadacheYes           -0.0328     0.151    -0.217 0.828   \n# … with 28 more rows\n\n\nCheck with testing data\n\npredict(cont1_fit, test_data)\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\n\n# A tibble: 183 × 1\n   .pred\n   <dbl>\n 1  98.7\n 2  99.0\n 3  99.1\n 4  98.6\n 5  98.7\n 6  98.7\n 7  99.1\n 8  98.9\n 9  99.2\n10  99.1\n# … with 173 more rows\n\ncont1_aug <- \n  augment(cont1_fit, test_data)\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\ncont1_aug\n\n# A tibble: 183 × 33\n   SwollenLymph…¹ Chest…² Chill…³ Nasal…⁴ CoughYN Sneeze Fatigue Subje…⁵ Heada…⁶\n   <fct>          <fct>   <fct>   <fct>   <fct>   <fct>  <fct>   <fct>   <fct>  \n 1 Yes            Yes     Yes     Yes     No      Yes    Yes     Yes     Yes    \n 2 Yes            No      Yes     No      No      No     Yes     Yes     Yes    \n 3 No             No      Yes     No      Yes     Yes    Yes     Yes     Yes    \n 4 No             Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n 5 Yes            Yes     Yes     Yes     Yes     No     Yes     Yes     Yes    \n 6 No             Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n 7 No             No      Yes     No      Yes     No     Yes     Yes     Yes    \n 8 Yes            Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n 9 No             Yes     No      No      Yes     Yes    Yes     No      Yes    \n10 Yes            Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n# … with 173 more rows, 24 more variables: Weakness <fct>, WeaknessYN <fct>,\n#   CoughIntensity <fct>, CoughYN2 <fct>, Myalgia <fct>, MyalgiaYN <fct>,\n#   RunnyNose <fct>, AbPain <fct>, ChestPain <fct>, Diarrhea <fct>,\n#   EyePn <fct>, Insomnia <fct>, ItchyEye <fct>, Nausea <fct>, EarPn <fct>,\n#   Hearing <fct>, Pharyngitis <fct>, Breathless <fct>, ToothPn <fct>,\n#   Vision <fct>, Vomit <fct>, Wheeze <fct>, BodyTemp <dbl>, .pred <dbl>, and\n#   abbreviated variable names ¹​SwollenLymphNodes, ²​ChestCongestion, …\n\n\n\n\nRMSE\nTraining Data\n\ncont1_train <- \n  augment(cont1_fit, train_data)\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\nyardstick::rmse(cont1_train, BodyTemp, .pred)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard        1.12\n\n\nTesting Data\n\nyardstick::rmse(cont1_aug, BodyTemp, .pred)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard        1.15\n\n\nWe see that the training data performed a bit better with our RMSE estimated to be 1.12 versus with the tested data at 1.15, but both are within 0.03 of one another, which is not a bad amount. woo"
  },
  {
    "objectID": "fluanalysis/code/modeleval.html#continuous-main-predictor-runnynose",
    "href": "fluanalysis/code/modeleval.html#continuous-main-predictor-runnynose",
    "title": "Model Evaluation",
    "section": "Continuous + Main Predictor (RunnyNose)",
    "text": "Continuous + Main Predictor (RunnyNose)\nRecipe for a logistic model to our categorical outcome of interest (Nausea)\n\ncont_recipe2 <- \n  recipe(BodyTemp ~ RunnyNose, data = train_data) \n\n\nFit a Model with Workflow\n\ncont_model2 <- \n  linear_reg()  %>% \n  set_engine(\"lm\") \n\ncont2_wflow <- \n  workflow() %>% \n  add_model(cont_model2) %>% \n  add_recipe(cont_recipe2)\n\ncont2_fit <- \n  cont2_wflow %>% \n  fit(data = train_data)\n\ncont2_fit %>% \n  extract_fit_parsnip() %>% \n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic p.value\n  <chr>           <dbl>     <dbl>     <dbl>   <dbl>\n1 (Intercept)    99.1      0.0978   1014.    0     \n2 RunnyNoseYes   -0.229    0.115      -1.98  0.0477\n\n\n\n\nRMSE\nTesting Data\nCheck model with testing data\n\npredict(cont2_fit, test_data)\n\n# A tibble: 183 × 1\n   .pred\n   <dbl>\n 1  98.9\n 2  99.1\n 3  99.1\n 4  98.9\n 5  98.9\n 6  98.9\n 7  99.1\n 8  98.9\n 9  99.1\n10  98.9\n# … with 173 more rows\n\ncont2_aug <- \n  augment(cont2_fit, test_data)\n\ncont2_aug\n\n# A tibble: 183 × 33\n   SwollenLymph…¹ Chest…² Chill…³ Nasal…⁴ CoughYN Sneeze Fatigue Subje…⁵ Heada…⁶\n   <fct>          <fct>   <fct>   <fct>   <fct>   <fct>  <fct>   <fct>   <fct>  \n 1 Yes            Yes     Yes     Yes     No      Yes    Yes     Yes     Yes    \n 2 Yes            No      Yes     No      No      No     Yes     Yes     Yes    \n 3 No             No      Yes     No      Yes     Yes    Yes     Yes     Yes    \n 4 No             Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n 5 Yes            Yes     Yes     Yes     Yes     No     Yes     Yes     Yes    \n 6 No             Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n 7 No             No      Yes     No      Yes     No     Yes     Yes     Yes    \n 8 Yes            Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n 9 No             Yes     No      No      Yes     Yes    Yes     No      Yes    \n10 Yes            Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n# … with 173 more rows, 24 more variables: Weakness <fct>, WeaknessYN <fct>,\n#   CoughIntensity <fct>, CoughYN2 <fct>, Myalgia <fct>, MyalgiaYN <fct>,\n#   RunnyNose <fct>, AbPain <fct>, ChestPain <fct>, Diarrhea <fct>,\n#   EyePn <fct>, Insomnia <fct>, ItchyEye <fct>, Nausea <fct>, EarPn <fct>,\n#   Hearing <fct>, Pharyngitis <fct>, Breathless <fct>, ToothPn <fct>,\n#   Vision <fct>, Vomit <fct>, Wheeze <fct>, BodyTemp <dbl>, .pred <dbl>, and\n#   abbreviated variable names ¹​SwollenLymphNodes, ²​ChestCongestion, …\n\n## RMSE - TEST\nyardstick::rmse(cont2_aug, BodyTemp, .pred)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard        1.13\n\n\nTraining Data\nCompare the outcome of the tested data with the original.\n\ncont2_train <- \n  augment(cont2_fit, train_data)\n\nyardstick::rmse(cont2_train, BodyTemp, .pred)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard        1.21\n\n\nUnlike our previous model, the testing model performed better while using RunnyNose as the only predictor than the testing model with all predictors compared to the training model. This model has a more substantial difference between the RMSEs with the training model = 1.21 and the testing model = 1.13.\nWhen we compare the model predictors that should be included based on RMSE, we have pretty comparable RMSEs. For the testing datasets, RunnyNose alone was a better model, but for the testing models, all predictors performed better.\nTo have a more conclusive model, I would run this simulation again with different splits in the data and see if the test/train models perform the same, or if we see some more variation depending how the data is split. However, off the bat and from these attempted models alone, I would recommend to use the RunnyNose alone as a predictor. This is because at the moment, its application is comparable if not better than all variables used, with a considerably more simple model. Other evaluation methods may yield different results, but based off RMSE alone, the potentially higher RMSE for trained data is a valid trade off for a more intuitive model and results."
  }
]